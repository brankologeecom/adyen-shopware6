name: Build Adyen Plugin on Release

on:
  release:
    types:
      - published

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # Step 1: Fetch the newest Shopware version from Dockware
      - name: Fetch Newest Shopware Version
        id: fetch-newest-version
        run: |
          newest_tag=$(curl -s "https://hub.docker.com/v2/repositories/dockware/play/tags?page_size=100" | \
            jq -r '.results[].name' | \
            grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' | \
            sort -V | \
            tail -n 1)
          echo "NEWEST_DOCKWARE_TAG=$newest_tag" >> $GITHUB_ENV
          echo "Newest Shopware tag is: $newest_tag"

      # Step 2: Create Dynamic Matrix
      - name: Create Dynamic Matrix
        id: set-matrix
        run: |
          echo "Creating dynamic matrix..."
          matrix_json=$(jq -n \
            --arg shopware_v1 "6.4.0.0" \
            --arg shopware_v2 "$NEWEST_DOCKWARE_TAG" \
            '{
              include: [
                {shopware_version: $shopware_v1},
                {shopware_version: $shopware_v2}
              ]
            }')
          echo "$matrix_json" > matrix.json
          echo "matrix=$matrix_json" >> $GITHUB_ENV
          echo "Generated matrix: $matrix_json"
        env:
          NEWEST_DOCKWARE_TAG: ${{ env.NEWEST_DOCKWARE_TAG }}

      # Step 3: Validate Matrix
      - name: Debug Generated Matrix
        run: |
          echo "Validating generated matrix..."
          cat matrix.json
          jq . matrix.json

  build-plugin:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:
      # Step 4: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 5: Fetch Release Tag
      - name: Get Release Tag
        id: release
        run: echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      # Step 6: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Build and Push Docker Image
      - name: Push Docker Image for Shopware ${{ matrix.shopware_version }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/adyen-shopware6:${{ matrix.shopware_version }}-${{ env.RELEASE_TAG }}
          build-args: |
            SHOPWARE_TAG=${{ matrix.shopware_version }}
            RELEASE_TAG=${{ env.RELEASE_TAG }}
